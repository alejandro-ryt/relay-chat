import { TUser, TUserContact } from "@/types/user.types";

const generateRandomUser = (): TUser => {
  const firstNames = [
    "Alice",
    "Bob",
    "Charlie",
    "David",
    "Eve",
    "Frank",
    "Grace",
    "Henry",
    "Ivy",
    "Jack",
    "Karen",
    "Liam",
    "Mia",
    "Noah",
    "Olivia",
    "Peter",
    "Quinn",
    "Ryan",
    "Sophia",
    "Thomas",
    "Ursula",
    "Victor",
    "Wendy",
    "Xavier",
    "Yvonne",
    "Zachary",
    "Ava",
    "Benjamin",
    "Chloe",
    "Daniel",
    "Ella",
    "Felix",
    "Georgia",
    "Hugo",
    "Isabella",
    "Julian",
    "Lily",
    "Mason",
    "Nora",
    "Owen",
    "Penelope",
    "Richard",
    "Stella",
    "Theodore",
    "Uma",
    "Vincent",
    "Willow",
    "Wyatt",
    "Zoe",
    "Aiden",
    "Brooke",
    "Caleb",
    "Destiny",
    "Ethan",
    "Faith",
    "Gavin",
    "Hazel",
    "Isaac",
    "Jade",
    "Kyle",
    "Luna",
    "Micah",
    "Naomi",
    "Parker",
    "Riley",
    "Samuel",
    "Trinity",
    "Uriah",
    "Violet",
    "Wesley",
    "Ximena",
    "Yara",
    "Adrian",
    "Brynn",
    "Colton",
    "Delilah",
    "Easton",
    "Finley",
    "Hadley",
    "Jude",
    "Kinsley",
    "Leighton",
    "Marley",
    "Paxton",
    "Rowan",
    "Skylar",
    "Teagan",
    "Zander",
  ];
  const lastNames = [
    "Smith",
    "Johnson",
    "Williams",
    "Brown",
    "Jones",
    "Garcia",
    "Miller",
    "Davis",
    "Rodriguez",
    "Martinez",
    "Hernandez",
    "Lopez",
    "Gonzalez",
    "Wilson",
    "Anderson",
    "Thomas",
    "Taylor",
    "Moore",
    "Jackson",
    "Martin",
    "Lee",
    "Perez",
    "Thompson",
    "White",
    "Harris",
    "Sanchez",
    "Clark",
    "Ramirez",
    "Lewis",
    "Robinson",
    "Walker",
    "Young",
    "Allen",
    "King",
    "Wright",
    "Scott",
    "Torres",
    "Nguyen",
    "Hill",
    "Flores",
    "Green",
    "Adams",
    "Nelson",
    "Baker",
    "Hall",
    "Rivera",
    "Campbell",
    "Mitchell",
    "Carter",
    "Roberts",
    "Gomez",
    "Phillips",
    "Evans",
    "Turner",
    "Diaz",
    "Parker",
    "Cruz",
    "Edwards",
    "Collins",
    "Reyes",
    "Stewart",
    "Morris",
    "Morales",
    "Murphy",
    "Cook",
    "Rogers",
    "Gutierrez",
    "Ortiz",
    "Morgan",
    "Cooper",
    "Peterson",
    "Bailey",
    "Reed",
    "Kelly",
    "Howard",
    "Ward",
    "Cox",
    "Richardson",
    "Wood",
    "Watson",
    "Brooks",
    "Bennett",
    "Gray",
    "James",
    "Reyes",
    "Price",
    "Myers",
    "Long",
    "Foster",
    "Sanders",
    "Ross",
    "Powell",
    "Sullivan",
    "Stone",
    "Ryan",
  ];
  const domains = ["example.com", "test.org", "domain.net", "mail.io"];

  const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];
  const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];
  const email = `${firstName.toLowerCase()}.${lastName.toLowerCase()}@${domains[Math.floor(Math.random() * domains.length)]}`;
  const username = `${firstName.toLowerCase()}${Math.floor(Math.random() * 100)}`;
  const createdAt = new Date(
    Date.now() - Math.random() * 365 * 24 * 60 * 60 * 1000
  ).toISOString();
  const updatedAt = new Date(
    Date.now() - Math.random() * 365 * 24 * 60 * 60 * 1000
  ).toISOString();
  const profilePic = `https://i.pravatar.cc/150?u=${username}`;
  const password = "password123";
  const contacts: TUserContact[] = [];
  const socketId =
    Math.random() > 0.5 ? Math.random().toString(36).substring(2, 15) : null;

  for (let i = 0; i < Math.floor(Math.random() * 3); i++) {
    contacts.push({
      isBlocked: Math.random() > 0.5,
      contact: generateRandomUser(),
    });
  }

  return {
    createdAt,
    email,
    firstName,
    lastName,
    password,
    profilePic,
    socketId,
    updatedAt,
    username,
    contacts,
    __v: Math.floor(Math.random() * 10),
    _id: Math.random().toString(36).substring(2, 15),
  };
};

export const generateUsers = (count: number): TUser[] => {
  const users: TUser[] = [];
  for (let i = 0; i < count; i++) {
    users.push(generateRandomUser());
  }
  return users;
};
